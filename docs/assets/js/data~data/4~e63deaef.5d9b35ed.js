(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{258:function(a){a.exports={data:{tag:{title:"cs friday",belongsTo:{edges:[{node:{title:"CS Friday 1 - SQL Intro",path:"/cs-friday-1-sql-intro",date:"31. May 2019",timeToRead:2,description:"Weekly computer science inspired tips for Instagram",content:'<p>Over the last several months I\'ve posted random snippets of code on my <a href="https://instagram.com/_gritts_" target="_blank" rel="nofollow noopener noreferrer">Instagram page</a>(<a href="https://www.instagram.com/p/BuW8ernBb9C/" target="_blank" rel="nofollow noopener noreferrer">like this one for R</a>, <a href="https://www.instagram.com/p/Bh7u4SjF19G/" target="_blank" rel="nofollow noopener noreferrer">or this one for JavaScript</a>, <a href="https://www.instagram.com/p/BhzimtCFG-8/" target="_blank" rel="nofollow noopener noreferrer">or this one about first class functions</a>). I\'m not sharing the actual snippets of code I\'m working on, rather simplified versions that make the code easier to explain. It is a fun distraction from work to think about the best ways to describe some interesting concepts. I don\'t have many follows that are coders, but I do have a few. </p>\n<p>Sometimes it is impossible to summarize everything that needs to be explained in an Instagram post. So I\'ve decided to include them here as well. Hopefully with more thorough explanations. </p>\n<h2 id="learn-sql"><a href="#learn-sql" aria-hidden="true"><span class="icon icon-link"></span></a>Learn SQL</h2>\n<p>I have a BS in Wildlife Ecology and Conservation. While I was in school I learned about data collection and statistics, but I never learned how to best manage that data. When I began working at NDOW I soon learned about SQL. It changed <em>everything</em>. SQL is by far one of my favorite languages to write. So, let\'s get started.</p>\n<p>We will create a simple database of researchers and their research. There will be two tables, one for details about each researcher, and the second for details of their different research interests.</p>\n<p>The best place to practice this code is on <a href="sqlfiddle.com">sqlfiddle.com</a>. Be sure to change the database engine to PostgreSQL 9.6.</p>\n<h2 id="create-a-table"><a href="#create-a-table" aria-hidden="true"><span class="icon icon-link"></span></a>Create a Table</h2>\n<p>First things first, create and populate the researcher table.</p>\n<pre class="language-sql"><span class="token comment">-- create researchers table</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> researchers <span class="token punctuation">(</span>\n  id <span class="token keyword">serial</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>\n  first_name <span class="token keyword">text</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  last_name <span class="token keyword">text</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  email <span class="token keyword">text</span> <span class="token keyword">UNIQUE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- insert some researchers into our new table</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> researchers <span class="token punctuation">(</span>\n  first_name<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> email\n<span class="token punctuation">)</span>\n<span class="token keyword">VALUES</span>\n  <span class="token punctuation">(</span><span class="token string">\'Mitchell\'</span><span class="token punctuation">,</span> <span class="token string">\'Gritts\'</span><span class="token punctuation">,</span> <span class="token string">\'mgritts@email.com\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">(</span><span class="token string">\'Nathan\'</span><span class="token punctuation">,</span> <span class="token string">\'Jackson\'</span><span class="token punctuation">,</span> <span class="token string">\'njackson@email.com\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">(</span><span class="token string">\'Miranda\'</span><span class="token punctuation">,</span> <span class="token string">\'Crowell\'</span><span class="token punctuation">,</span> <span class="token string">\'mcrowell@email.com\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre>\n<p>The <code class="language-text">CREATE TABLE</code> command will create a new table, the general pattern is as follows, <code class="language-text">CREATE TABLE table name (table columns);</code> Each column is listed in the following pattern <code class="language-text">name type constraints</code>. Note, each SQL statement must end with a semi-colon (;).</p>\n<p>Once the table is created, populate it with the <code class="language-text">INSERT INTO</code> command. Here I\'m specifying which columns in the researcher table I want to insert data into. Then specifying the values to be inserted. In this case three researchers.</p>\n<h2 id="query-a-table"><a href="#query-a-table" aria-hidden="true"><span class="icon icon-link"></span></a>Query a Table</h2>\n<p>This simple example doesn\'t show the full power of SQL, but you\'ll get an idea of how SQL works.</p>\n<pre class="language-sql"><span class="token keyword">SELECT</span> \n  first_name<span class="token punctuation">,</span>\n  last_name\n<span class="token keyword">FROM</span> \n  researchers\n<span class="token keyword">WHERE</span> first_name <span class="token operator">=</span> <span class="token string">\'Gritts\'</span><span class="token punctuation">;</span></pre>\n<p>The general pattern for a query is <code class="language-text">SELECT columns FROM table name WHERE criteria</code>. It all kinda makes sense, even without knowing much about SQL: select first name and last name from the researchers table where the first name is Gritts. It\'s almost a complete sentence. Of course it does get more powerful from there!</p>\n<h2 id="relationships"><a href="#relationships" aria-hidden="true"><span class="icon icon-link"></span></a>Relationships</h2>\n<p>Relationships are the real power behind SQL databases. They allow us to create tables of related data without the need to duplicate data. Avoiding duplicate data in this way is called data normalization. That is beyond the scope of this post. Below let\'s create another table that will hold project data for the researchers in the researcher table.</p>\n<pre class="language-sql"><span class="token comment">-- create projects table</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> projects <span class="token punctuation">(</span>\n  id <span class="token keyword">serial</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>\n  project_name <span class="token keyword">text</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  project_description <span class="token keyword">text</span><span class="token punctuation">,</span>\n  project_start_date <span class="token keyword">date</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- insert data into projects table</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> projects <span class="token punctuation">(</span>\n  project_name<span class="token punctuation">,</span> project_description<span class="token punctuation">,</span> project_start_date\n<span class="token punctuation">)</span>\n<span class="token keyword">VALUES</span></pre>\n'}},{node:{title:"CS Friday 0 - How I Update R",path:"/cs-friday-0-how-i-update-r",date:"31. May 2019",timeToRead:2,description:"Steps to update to the newest versions of R and RStudio",content:'<p>TLDR; Install and/or Update R and R Studio on your computer</p>\n<h2 id="update-r"><a href="#update-r" aria-hidden="true"><span class="icon icon-link"></span></a>Update R</h2>\n<p>The overall release schedule for R is to release updates every year in the spring, with patches issued as needed. You can plan on updating R at least once a year. However, updating R isn\'t always easy. These are the steps I follow in to update R on my machine. It might not be the best, but it works for me. </p>\n<p>The following line of code will create a list of all the packages you\'ve installed in R. This is a jumbled bit of code, you can dissect it if you want. </p>\n<p>I generally run this in my documents folder of my computer, that way I know where the saved file goes. You can change where this file is saved by changing the <code class="language-text">file</code> parameter in the <code class="language-text">save</code> function.</p>\n<pre class="language-r">pkgs <span class="token operator">&lt;-</span> installed.packages<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">(</span>installed.packages<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token percent-operator operator">%in%</span>\n          installed.packages<span class="token punctuation">(</span>priority <span class="token operator">=</span> <span class="token string">\'base\'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\nsave<span class="token punctuation">(</span>pkgs<span class="token punctuation">,</span> file <span class="token operator">=</span> <span class="token string">\'installed_packages.RData\'</span><span class="token punctuation">)</span></pre>\n<p>After running the above snippet of code I\'ll exit R Studio and install the <a href="https://cran.r-project.org/" target="_blank" rel="nofollow noopener noreferrer">newest version of R</a>. Once R is installed run the following line of code to install all of your packages.</p>\n<pre class="language-r">load<span class="token punctuation">(</span>‘installed_packages.RData’<span class="token punctuation">)</span>\ninstall.packages<span class="token punctuation">(</span>pkgs<span class="token punctuation">)</span></pre>\n<p><em>Note: the current version of these packages will be installed, this may have unintended consequences. If you experience issues you can specify the version you wish to install, and retry the installation of the package causing issues.</em></p>\n<h2 id="r--r-studio-setup"><a href="#r--r-studio-setup" aria-hidden="true"><span class="icon icon-link"></span></a>R &#x26; R Studio Setup</h2>\n<p>General R and R Studio setup tips if you are attempting to install R for the first time.</p>\n<h3 id="install-r"><a href="#install-r" aria-hidden="true"><span class="icon icon-link"></span></a>Install R</h3>\n<p>The current (3.6.0 as of May 6, 2019) installation file for R can be found here: <a href="https://cran.r-project.org/" target="_blank" rel="nofollow noopener noreferrer">https://cran.r-project.org/</a>. Select the installation for your system. </p>\n<h3 id="install-r-studio"><a href="#install-r-studio" aria-hidden="true"><span class="icon icon-link"></span></a>Install R Studio</h3>\n<p>The current (1.2.1335 as of May 6, 2019) installation file for R Studio can be found here: <a href="https://www.rstudio.com/products/rstudio/download/#download" target="_blank" rel="nofollow noopener noreferrer">https://www.rstudio.com/products/rstudio/download/#download</a>. Select the installation for your system.</p>\n<h3 id="customizing-your-ide"><a href="#customizing-your-ide" aria-hidden="true"><span class="icon icon-link"></span></a>Customizing Your IDE</h3>\n<p>There are many options for to customize your environment. Go to the <code class="language-text">Tools &gt; Global Options</code> menu option. Here you can change the appearance and behavior of R Studio.</p>\n<h4 id="useful-settings"><a href="#useful-settings" aria-hidden="true"><span class="icon icon-link"></span></a>Useful Settings</h4>\n<p>Every time I open R I want a fresh environment to work in. On the General tab of the Global Options menu uncheck the <code class="language-text">Restore most recently opened project at startup</code> and <code class="language-text">Restore previously open source documents at startup</code> under the <strong>R Sessions</strong> section. Uncheck the <code class="language-text">Restore .RData into workspace at startup</code> and choose the Never from the drop down for <code class="language-text">Save workspace to .RData on exit</code>.</p>\n<p>I prefer a dark IDE, select the Appearance menu item, and in the <code class="language-text">Editor theme</code> box choose a dark theme (or different theme). You\'ll see a preview to the right.</p>\n<h3 id="helpful-packages"><a href="#helpful-packages" aria-hidden="true"><span class="icon icon-link"></span></a>Helpful Packages</h3>\n<p>If you have a fresh install the following packages are good to install.</p>\n<ul>\n<li><code class="language-text">tidyverse</code> - installs many packages that make working in R a lot more expressive</li>\n<li><code class="language-text">sf</code> - for spatial data analysis, newer packaged for spatial data</li>\n<li><code class="language-text">raster</code> - for raster data</li>\n<li><code class="language-text">viridis</code> - color palettes for plotting continuous data</li>\n<li><code class="language-text">rcartocolors</code> - color palettes for mapping, diverging, categorical data</li>\n<li><code class="language-text">sp</code> - the original spatial packages, quickly becoming obsolete because of the <code class="language-text">sf</code> package. You\'ll still need some of the functions from <code class="language-text">sp.</code></li>\n</ul>\n<p>Install these with the following command</p>\n<pre class="language-r">install.packages<span class="token punctuation">(</span>c<span class="token punctuation">(</span><span class="token string">\'tidyverse\'</span><span class="token punctuation">,</span> <span class="token string">\'sf\'</span><span class="token punctuation">,</span> <span class="token string">\'raster\'</span><span class="token punctuation">,</span>\n                   <span class="token string">\'viridis\'</span><span class="token punctuation">,</span> <span class="token string">\'rcartocolors\'</span><span class="token punctuation">,</span> <span class="token string">\'sp\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre>\n'}}]}}}}}}]);